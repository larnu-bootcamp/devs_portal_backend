name: continuous integration

on:
  pull_request:
    branches: [main]

env:
  NODE_ENV: development
  DB_HOST: localhost
  DB_PORT: 5432
  DB_USER: postgres
  DB_PASS: postgres
  DB_NAME: devs_portal
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

jobs:
  linting:
    name: Linting the code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm i
      - run: npm run dev:lint

  testing:
    name: Testing the code
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      # firebase:
      #   image: andreysenov/firebase-tools

      #   ports:
      #     - 9199:9199

    steps:
      # - name: GitHub Action for Firebase and Postgres, w9jds/firebase-action@v11.9.0
      # - uses: joinflux/firebase-tools@v10.7.0
      #   with:
      #     args: emulators:exec ./firabase.json
      #   env:
      #     FIREBASE_TOKEN: 1//05zjspZfqCfUJCgYIARAAGAUSNwF-L9Ir36wdwCbNtgVnfyeTdeGUJMZsolpOZyUa9lDccpVPyZ5HGWvYPyk1zLkYkIjh9XooBrw
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm i
      - run: sudo npm install -g firebase-tools
      - run: sudo apt install default-jdk
      - run: npm run db:up
      - run: firebase emulators:exec --only storage "npm run test:start"
      # - run: npm run test:start
